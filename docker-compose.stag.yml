version: "3.9"

services:
  postgres:
      image: postgres:latest
      container_name: postgres
      networks:
      - postgres
      ports:
        - 5440:5432
      volumes:
        - postgres:/var/lib/postgresql/data
        - /etc/localtime:/etc/localtime:ro
      environment:
        - POSTGRES_HOST=localhost
        - POSTGRES_DB=dev_chats
        - POSTGRES_USER=postgres
        - POSTGRES_PASSWORD=postgres
      restart: unless-stopped

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    depends_on:
      - postgres
    ports:
      - "5555:80"
    environment:
      - PGADMIN_DEFAULT_EMAIL=pgadmin4@pgadmin.org
      - PGADMIN_DEFAULT_PASSWORD=admin
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    restart: unless-stopped

  rabbitmq:
    image: "rabbitmq:3.8.14-alpine"
    container_name: rabbitmq
    networks:
      - rabbitmq
    restart: unless-stopped
    logging:
      driver: none

  backend:
    depends_on:
      - rabbitmq
      - postgres
    container_name: backend
    build:
      context: .
      dockerfile: Dockerfile
    volumes: 
    - ./:/app
    - /app/node_modules
    # environment:
    #   - PORT=8080
    #   - NODE_ENV=development
    env_file:
      - ./.env
    ports: 
      - 8080:8080
    expose:
      - 8080
    networks:
      - gateway
      - rabbitmq
      - postgres
    restart: unless-stopped
    command: npm run start:dev

  consumer:
    depends_on:
      - rabbitmq
      - backend
    container_name: consumer
    build:
      context: .
      dockerfile: Dockerfile.Consumer
    volumes: 
    # - ./:/app
    - /app/node_modules
    environment:
      - PORT=8080
      - NODE_ENV=development
    networks:
      - gateway
      - rabbitmq
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    command: npm run start:consumer:dev

networks:
  gateway:
    driver: bridge
    name: gateway
  rabbitmq:
    internal: true 
  postgres:
    internal: true

volumes:
  pgadmin-data:
  postgres:
    external: false
